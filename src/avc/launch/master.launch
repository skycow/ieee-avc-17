<!-- -*- mode: XML -*- -->
<launch>

  <arg name="teleop" default="false" />
  <arg name="vesc" default="false" />
  <arg name="sensors" default="false" />
  <arg name="local_localization" default="false" />
  <arg name="global_localization" default="false" />
  <arg name="localization" default="false" />
  <arg name="amcl" default="false" />
  <arg name="map_server" default="false" />
  <arg name="nav" default="false" />
  <arg name="opencv" default="false" />
  <arg name="opencvcpp" default="false" />
  <arg name="nav_goals" default="false" />

  <group ns="nav_goals" if="$(arg nav_goals)">
  <node name="nav_goals" pkg="avc" type="nav_goals" />
  </group>

  <group ns="opencvns" if="$(arg opencv)">
  <node name="opencvname" pkg="opencvavc" type="stopsign.py" />
  </group>

  <group ns="opencvns" if="$(arg opencvcpp)">
  <node name="opencvname" pkg="opencvavc" type="stopsigncpp" />
  </group>

  <arg name="bag" default="false" />
  <node name="bag" pkg="rosbag" type="record" args="-a" if="$(arg bag)"/>

  <!-- start teleop -->
  <group ns="teleop" if="$(arg teleop)">
    <!-- joystick to ackermann command -->
    <include file="$(find avc)/launch/includes/inputs/joy_teleop.launch.xml" > </include>
  </group>

  <group ns="vesc" if="$(arg vesc)">
    <!-- default (zero) ackermann command -->
    <node name="zero_ackermann_cmd" pkg="rostopic" type="rostopic" args="pub -r 4 ackermann_cmd_mux/input/default ackermann_msgs/AckermannDriveStamped '{header: auto, drive: {steering_angle: 0.0, speed: 0.0} }'" />

    <!-- priority-based command multiplexer -->
    <include file="$(find ackermann_cmd_mux)/launch/standalone.launch">
      <arg name="nodelet_manager_name" value="ackermann_cmd_mux_nodelet_manager" />
      <arg name="config_file" value="$(find avc)/config/mux.yaml" />
    </include>

    <!-- start electronic speed controller driver -->
    <include file="$(find avc)/launch/includes/vesc/vesc.launch.xml" > </include>

  </group>

  <!-- start sensors -->
  <group ns="sensors" if="$(arg sensors)">
    <include file="$(find avc)/launch/includes/sensors/sensors.launch.xml" />
  </group>

  <!-- start localization -->
  <group ns="localization" if="$(arg localization)">
    <!-- start GPS navsat transform node -->
    <include file="$(find avc)/launch/includes/localization/navsat_transform.launch.xml" > </include>
  
    <!-- start absolute robot_localization node -->
    <include file="$(find avc)/launch/includes/localization/ekf_global_localization.launch.xml" > </include>
  
    <!-- start local robot_localization node -->
    <include file="$(find avc)/launch/includes/localization/ekf_local_localization.launch.xml" > </include>
  </group>

  <!-- start local localization -->
  <group ns="localization" if="$(arg local_localization)">
    <!-- start local robot_localization node -->
    <include file="$(find avc)/launch/includes/localization/ekf_local_localization.launch.xml" > </include>
  </group>

  <!-- start global localization -->
  <group ns="localization" if="$(arg global_localization)">
    <!-- start GPS navsat transform node -->
    <include file="$(find avc)/launch/includes/localization/navsat_transform.launch.xml" > </include>
  
    <!-- start absolute robot_localization node -->
    <include file="$(find avc)/launch/includes/localization/ekf_global_localization.launch.xml" > </include>
  </group>

  <group ns="map" if="$(arg map_server)">
    <include file="$(find avc)/launch/includes/amcl/map.launch.xml" />
  </group>

  <group ns="amcl" if="$(arg amcl)">
    <include file="$(find avc)/launch/includes/amcl/amcl.launch.xml" />
  </group>

  <group if="$(arg nav)">
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <remap from="map" to="/map/map"/>
      <remap from="static_map" to="/map/static_map"/>

      <rosparam file="$(find avc)/config/nav/move_base.yaml" command="load" />
      <rosparam file="$(find avc)/config/nav/costmap_common.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find avc)/config/nav/costmap_common.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find avc)/config/nav/costmap_local.yaml" command="load" />
      <rosparam file="$(find avc)/config/nav/costmap_global.yaml" command="load" />
      <rosparam file="$(find avc)/config/nav/local_planner.yaml" command="load" />
      <rosparam file="$(find avc)/config/nav/global_planner.yaml" command="load" />
    </node>
  
    <node pkg="avc" type="cmd_vel_to_ackermann_drive.py" name="cmd_vel_to_ackermann_drive" output="screen">
      <param name="twist_cmd_topic" value="/cmd_vel" />
      <param name="ackermann_cmd_topic" value="/vesc/ackermann_cmd_mux/input/navigation" />
      <param name="wheelbase" value="0.33" />
    </node>
  </group>

</launch>
